name: tests

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: tests
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v2
      - name: Setup earthly
        uses: earthly/actions-setup@v1
        with:
          version: "latest"
      - name: Run ci tests
        run: |
          earthly --use-inline-cache --save-inline-cache --strict +ci
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: cover.out
      # prepare test setup with kind
      - name: Build test image
        run: |
          earthly +docker --DOCKER_REPO=local-kind-test:test
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          version: v0.12.0
          cluster_name: kind
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - name: Setup kind and helm
        run: |
          kind load docker-image local-kind-test:test
          helm repo add kubeteach https://dergeberl.github.io/kubeteach-charts
      # tests with example tasks
      - name: Deploy ci test helm-chart
        run: |
          helm install kubeteach kubeteach/kubeteach-core --namespace kubeteach-system --wait --timeout 120s --create-namespace --set image.pullPolicy=IfNotPresent --set image.repository=local-kind-test --set image.tag=test --set serviceAccount.name=kubeteach
      - name: Deploy kubeteach-example file to kind cluster
        run: |
          kubectl apply -f .github/kind-test-taskdefinitions.yaml
          sleep 15
          kubectl get po -owide -n kubeteach-system
          kubectl get deployments -n kubeteach-system  -o wide
          kubectl get tasks -A
      - name: Run test in kind cluster to check expected state
        run: |
          kubectl get task task01 -o jsonpath='{.status.state}' | grep successful
          kubectl get task task02 -o jsonpath='{.status.state}' | grep active
          kubectl get task task03 -o jsonpath='{.status.state}' | grep pending
      # tests with exerciseset1
      - name: Deploy exerciseset1 helm-chart
        run: |
          helm install kubeteach kubeteach/kubeteach-exerciseset1 --namespace kubeteach-exerciseset1 --create-namespace --set kubeteach.image.pullPolicy=IfNotPresent --set kubeteach.image.repository=local-kind-test --set kubeteach.image.tag=test --set kubeteach.serviceAccount.name=kubeteach
      - name: Wait for kubeteach to get ready
        run: |
          kubectl wait --for=condition=available --timeout=600s -n kubeteach-exerciseset1 deployment/kubeteach
          sleep 10
      - name: Apply solutions and check task
        run: |
          bash .github/test-exerciseset1.sh