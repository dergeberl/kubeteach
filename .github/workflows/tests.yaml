name: tests

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
      - uses: earthly/actions-setup@v1
        with:
          version: "latest"
      - name: run-generate
        run: |
          earthly +generate
          earthly +manifests
          git diff --name-only --exit-code
          git diff --name-only --staged --exit-code
      - name: golangci-lint
        run: |
          earthly -ci +lint
      - name: run tests
        run: |
          earthly test
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: cover.out
      - name: build test image
        run: |
          earthly +docker --DOCKER_REPO=local-kind-test:test
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          version: v0.12.0
          cluster_name: kind
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - name: Deploy helm-chart
        run: |
          kind load docker-image local-kind-test:test
          helm repo add kubeteach https://dergeberl.github.io/kubeteach-charts
          helm install kubeteach kubeteach/kubeteach-core --namespace kubeteach-system --wait --timeout 120s --create-namespace --set image.pullPolicy=IfNotPresent --set image.repository=local-kind-test --set image.tag=test --set serviceAccount.name=kubeteach
      - name: Deploy kubeteach-example to kind cluster
        run: |
          kubectl apply -f .github/kind-test-taskdefinitions.yaml
          sleep 15
          kubectl get po -owide -n kubeteach-system
          kubectl get deployments -n kubeteach-system  -o wide
          kubectl get tasks -A
      - name: Run test in kind cluster
        run: |
          kubectl get task task01 -o jsonpath='{.status.state}' | grep successful
          kubectl get task task02 -o jsonpath='{.status.state}' | grep active
          kubectl get task task03 -o jsonpath='{.status.state}' | grep pending
      - name: Deploy helm-chart
        run: |
          kind load docker-image local-kind-test:test
          helm repo add kubeteach https://dergeberl.github.io/kubeteach-charts
          helm install kubeteach kubeteach/kubeteach-exerciseset1 --namespace kubeteach-exerciseset1 --create-namespace --set kubeteach.image.pullPolicy=IfNotPresent --set kubeteach.image.repository=local-kind-test --set kubeteach.image.tag=test --set kubeteach.serviceAccount.name=kubeteach
      - name: wait for kubeteach to get ready
        run: |
          kubectl wait --for=condition=available --timeout=600s -n kubeteach-system deployment/kubeteach
          sleep 15
      - name: Apply solutions and check task
        run: |
          bash .github/test-exerciseset1.sh