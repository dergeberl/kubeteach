name: tests

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches: [ main ]

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.40
  test:
    #needs: [ golangci ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: ['1.15', '1.16']
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v2
      - name: install-test-tools-and-go-test
        run: |
          mkdir -p ./testbin
          test -f ./testbin/setup-envtest.sh || curl -sSLo ./testbin/setup-envtest.sh https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/v0.7.2/hack/setup-envtest.sh
          source ./testbin/setup-envtest.sh; fetch_envtest_tools ./testbin;  setup_envtest_env ./testbin; go test ./... -coverprofile cover.out
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: cover.cov
          flag-name: Go-${{ matrix.go }}
          parallel: true
  coveralls-finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
  deploy-test:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: local-kind-test:test
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.1.0
        with:
          version: v0.10.0
          cluster_name: kind
      - name: Deploy kubeteach to kind cluster
        run: |
          kind load docker-image local-kind-test:test
          cd config/manager && kustomize edit set image controller=local-kind-test:test
          cd ../..
          kustomize build config/default | kubectl apply -f -
          kubectl apply -f .github/kind-test-taskdefinitions.yaml
          sleep 15
          kubectl get po -owide -n kubeteach-system
          kubectl get deployments -n kubeteach-system  -o wide
          kubectl get tasks -A
      - name: Run test in kind cluster
        run: |
          kubectl get task task01 -o jsonpath='{.status.state}' | grep successful
          kubectl get task task02 -o jsonpath='{.status.state}' | grep active
          kubectl get task task03 -o jsonpath='{.status.state}' | grep pending